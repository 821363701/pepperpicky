__author__ = 'yu'

data = '''2015-09-15	33,918,103	630,304,934	-6.5	6.69	6.25
2015-09-14	54,666,225	672,407,197	-11.	7.8	6.94
2015-09-11	52,926,404	694,292,282	0.0	7.71	7.71
2015-09-10	52,460,177	687,950,038	-2.4	7.81	7.62
2015-09-09	87,441,836	688,151,919	2.97	7.73	7.96
2015-09-08	62,417,938	674,813,176	7.62	7.08	7.62
2015-09-07	68,082,505	665,990,867	1.28	7.01	7.1
2015-09-02	53,600,454	639,066,317	-0.7	6.86	6.81
2015-09-01	58,549,453	692,138,481	-10.	8.4	7.56
2015-08-31	74,572,008	721,865,918	-1.0	8.49	8.4
2015-08-28	78,220,147	732,349,874	5.55	8.1	8.55
2015-08-27	64,013,535	760,101,593	-0.6	8.01	7.96
2015-08-26	94,693,162	784,491,640	-10.	8.54	7.68
2015-08-25	53,910,812	809,807,179	0.0	8.53	8.53
2015-08-24	43,933,036	841,040,710	-3.1	9.79	9.48
2015-08-21	117,006,717	871,225,924	-7.6	11.4	10.53
2015-08-20	195,179,850	894,921,190	-1.2	11.85	11.7
2015-08-19	193,529,353	914,512,409	14.0	10.55	12.03
2015-08-18	264,252,968	890,903,269	-3.6	11.7	11.27
2015-08-17	163,410,204	950,233,778	3.62	11.3	11.71
2015-08-14	170,105,014	913,837,659	-0.7	11.46	11.37
2015-08-13	99,766,675	932,546,400	3.57	10.9	11.29
2015-08-12	127,083,406	937,335,925	-3.6	11.35	10.94
2015-08-11	192,083,983	931,442,810	1.93	11.35	11.57
2015-08-10	180,721,776	916,935,783	4.25	11.04	11.51
2015-08-07	117,416,576	900,350,535	2.44	10.62	10.88
2015-08-06	78,219,985	885,431,676	4.8	10.0	10.48
2015-08-05	128,518,852	881,792,346	-2.5	10.68	10.41
2015-08-04	68,698,858	859,115,678	8.57	9.56	10.38
2015-08-03	81,824,985	869,906,482	-5.6	10.0	9.44
2015-07-31	142,310,557	887,540,159	-3.9	10.6	10.18
2015-07-30	139,439,614	846,739,245	-4.9	11.41	10.84
2015-07-29	153,666,097	846,105,166	3.54	11.29	11.69
2015-07-28	178,721,903	869,509,156	-2.7	11.06	10.76
2015-07-27	201,904,404	921,817,616	-6.5	12.8	11.96
2015-07-24	338,788,671	979,017,295	-0.3	13.34	13.29
2015-07-23	290,026,537	927,410,924	10.7	11.7	12.96
2015-07-22	236,762,087	833,793,287	2.43	11.5	11.78
2015-07-21	377,393,310	789,696,925	-5.0	12.6	11.97
2015-07-20	100,582,963	536,668,321	6.20	12.08	12.83'''


import pygal

x = []
y1 = []
y2 = []
y3 = []
y4 = []
for line in data.split('\n'):
    parts = line.split('\t')

    try:
        x.append(parts[0][6:])
        y1.append(int(parts[1].replace(',', '')))
        y2.append(int(parts[2].replace(',', '')))
        y3.append(float(parts[4]))
        y4.append(float(parts[5]))
    except:
        print parts

x.reverse()
y1.reverse()
y2.reverse()
y3.reverse()
y4.reverse()

line_chart = pygal.Line(width=1600, height=800)
line_chart.title = 'rongzi'
line_chart.x_labels = x
line_chart.add('rongzi', y1)
line_chart.add('rongzi_balance', y2)
line_chart.add('open', y3, secondary=True)
line_chart.add('close', y4, secondary=True)
line_chart.render_to_file('test.svg')
line_chart.render_to_png('test.png')

